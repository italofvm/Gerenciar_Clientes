{"ast":null,"code":"import { Cliente } from '../modelo/Cliente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servico/cliente.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PrincipalComponent_input_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 10);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_6_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cadastrar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 11);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_7_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_input_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 12);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_8_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.remover());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_input_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 13);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_9_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.cancelar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_table_10_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_table_10_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const i_r15 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.selecionarCliente(i_r15));\n    });\n    i0.ɵɵtext(11, \"Selecionar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r15 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r14.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r14.idade);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r14.cidade);\n  }\n}\nfunction PrincipalComponent_table_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 14)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Nome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Idade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Cidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Selecionar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, PrincipalComponent_table_10_tr_14_Template, 12, 4, \"tr\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.clientes);\n  }\n}\nexport class PrincipalComponent {\n  // Construtor\n  constructor(servico) {\n    this.servico = servico;\n    // Objeto do tipo Cliente\n    this.cliente = new Cliente();\n    // Variável para visibilidade dos botões\n    this.btnCadastro = true;\n    // Variável para visibilidade da tabela\n    this.tabela = true;\n    // JSON de clientes\n    this.clientes = [];\n  }\n  // Método de seleção\n  selecionar() {\n    this.servico.selecionar().subscribe(retorno => this.clientes = retorno);\n  }\n  // Método de cadastro\n  cadastrar() {\n    this.servico.cadastrar(this.cliente).subscribe(retorno => {\n      // Cadastrar o cliente no vetor\n      this.clientes.push(retorno);\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Mensagem\n      alert('Cliente cadastrado com sucesso!');\n    });\n  }\n  // Método para selecionar um cliente específico\n  selecionarCliente(posicao) {\n    // Selecionar cliente no vetor\n    this.cliente = this.clientes[posicao];\n    // Visibilidade dos botões\n    this.btnCadastro = false;\n    // Visibilidade da tabela\n    this.tabela = false;\n  }\n  // Método para editar clientes\n  editar() {\n    this.servico.editar(this.cliente).subscribe(retorno => {\n      // Obter posiçao do vetor onde está o cliente\n      let posicao = this.clientes.findIndex(obj => {\n        return obj.codigo == retorno.codigo;\n      });\n      // Alterar os dados do cliente no vetor\n      this.clientes[posicao] = retorno;\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Visibilidade dos botões\n      this.btnCadastro = true;\n      // Visibilidade da tabela\n      this.tabela = true;\n      // Mensagem\n      alert('Cliente alterado com sucesso!');\n    });\n  }\n  // Método para remover clientes\n  remover() {\n    this.servico.remover(this.cliente.codigo).subscribe(retorno => {\n      // Obter posiçao do vetor onde está o cliente\n      let posicao = this.clientes.findIndex(obj => {\n        return obj.codigo == this.cliente.codigo;\n      });\n      // Remover cliente do vetor\n      this.clientes.splice(posicao, 1);\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Visibilidade dos botões\n      this.btnCadastro = true;\n      // Visibilidade da tabela\n      this.tabela = true;\n      // Mensagem\n      alert('Cliente removido com sucesso!');\n    });\n  }\n  // Método para cancelar\n  cancelar() {\n    // Limpar formulário\n    this.cliente = new Cliente();\n    // Visibilidade dos botões\n    this.btnCadastro = true;\n    // Visibilidade da tabela\n    this.tabela = true;\n  }\n  // Método de inicialização\n  ngOnInit() {\n    this.selecionar();\n  }\n}\nPrincipalComponent.ɵfac = function PrincipalComponent_Factory(t) {\n  return new (t || PrincipalComponent)(i0.ɵɵdirectiveInject(i1.ClienteService));\n};\nPrincipalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PrincipalComponent,\n  selectors: [[\"app-principal\"]],\n  decls: 11,\n  vars: 8,\n  consts: [[1, \"container\"], [\"src\", \"assets/cliente.png\"], [\"type\", \"text\", \"placeholder\", \"Nome\", \"name\", \"nome\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Idade\", \"name\", \"idade\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Cidade\", \"name\", \"cidade\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"Cadastrar\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Alterar\", \"class\", \"btn btn-warning\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Remover\", \"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Cancelar\", \"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Cadastrar\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Alterar\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Remover\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Cancelar\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function PrincipalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\");\n      i0.ɵɵelement(2, \"img\", 1);\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.cliente.nome = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.cliente.idade = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.cliente.cidade = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, PrincipalComponent_input_6_Template, 1, 0, \"input\", 5);\n      i0.ɵɵtemplate(7, PrincipalComponent_input_7_Template, 1, 0, \"input\", 6);\n      i0.ɵɵtemplate(8, PrincipalComponent_input_8_Template, 1, 0, \"input\", 7);\n      i0.ɵɵtemplate(9, PrincipalComponent_input_9_Template, 1, 0, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, PrincipalComponent_table_10_Template, 15, 1, \"table\", 9);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.nome);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.idade);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.cidade);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tabela);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"img[_ngcontent-%COMP%] {\\n  width: 250px;\\n  margin-bottom: 30px;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  width: 500px;\\n  margin: 30px auto;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\ninput[type=\\\"button\\\"][_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  form[_ngcontent-%COMP%] {\\n    width: 100%;\\n    margin: 30px auto;\\n  }\\n\\n  .table[_ngcontent-%COMP%] {\\n    width: 100px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJpbmNpcGFsL3ByaW5jaXBhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRTtJQUNFLFdBQVc7SUFDWCxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxZQUFZO0VBQ2Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltZyB7XG4gIHdpZHRoOiAyNTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuZm9ybSB7XG4gIHdpZHRoOiA1MDBweDtcbiAgbWFyZ2luOiAzMHB4IGF1dG87XG59XG5cbmlucHV0IHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAzMHB4IGF1dG87XG4gIH1cblxuICAudGFibGUge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Cliente","i0","PrincipalComponent","constructor","servico","selecionar","subscribe","retorno","clientes","cadastrar","cliente","push","alert","selecionarCliente","posicao","btnCadastro","tabela","editar","findIndex","obj","codigo","remover","splice","cancelar","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\Projetos\\Gerenciar_Clientes\\api-front\\src\\app\\principal\\principal.component.ts","D:\\Projetos\\Gerenciar_Clientes\\api-front\\src\\app\\principal\\principal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Cliente } from '../modelo/Cliente';\nimport { ClienteService } from '../servico/cliente.service';\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.component.html',\n  styleUrls: ['./principal.component.css']\n})\nexport class PrincipalComponent {\n\n    // Objeto do tipo Cliente\n    cliente = new Cliente();\n\n    // Variável para visibilidade dos botões\n    btnCadastro:boolean = true;\n\n    // Variável para visibilidade da tabela\n    tabela:boolean = true;\n\n    // JSON de clientes\n    clientes:Cliente[] = [];\n\n    // Construtor\n    constructor(private servico:ClienteService){}\n\n    // Método de seleção\n    selecionar():void{\n      this.servico.selecionar()\n      .subscribe(retorno => this.clientes = retorno);\n    }\n\n    // Método de cadastro\n    cadastrar():void{\n      this.servico.cadastrar(this.cliente)\n      .subscribe(retorno => { \n\n        // Cadastrar o cliente no vetor\n        this.clientes.push(retorno); \n\n        // Limpar formulário\n        this.cliente = new Cliente();\n\n        // Mensagem\n        alert('Cliente cadastrado com sucesso!');\n      });\n    }\n\n    // Método para selecionar um cliente específico\n    selecionarCliente(posicao:number):void{\n\n      // Selecionar cliente no vetor\n      this.cliente = this.clientes[posicao];\n\n      // Visibilidade dos botões\n      this.btnCadastro = false;\n\n      // Visibilidade da tabela\n      this.tabela = false;\n\n    }\n\n    // Método para editar clientes\n    editar():void{\n\n      this.servico.editar(this.cliente)\n      .subscribe(retorno => {\n\n        // Obter posiçao do vetor onde está o cliente\n        let posicao = this.clientes.findIndex(obj => {\n          return obj.codigo == retorno.codigo;\n        });\n\n        // Alterar os dados do cliente no vetor\n        this.clientes[posicao] = retorno;\n\n        // Limpar formulário\n        this.cliente = new Cliente();\n\n        // Visibilidade dos botões\n        this.btnCadastro = true;\n\n        // Visibilidade da tabela\n        this.tabela = true;\n\n        // Mensagem\n        alert('Cliente alterado com sucesso!');\n\n      });\n\n    }\n\n    // Método para remover clientes\n    remover():void{\n\n      this.servico.remover(this.cliente.codigo)\n      .subscribe(retorno => {\n\n        // Obter posiçao do vetor onde está o cliente\n        let posicao = this.clientes.findIndex(obj => {\n          return obj.codigo == this.cliente.codigo;\n        });\n\n        // Remover cliente do vetor\n        this.clientes.splice(posicao, 1);\n\n        // Limpar formulário\n        this.cliente = new Cliente();\n\n        // Visibilidade dos botões\n        this.btnCadastro = true;\n\n        // Visibilidade da tabela\n        this.tabela = true;\n\n        // Mensagem\n        alert('Cliente removido com sucesso!');\n\n      });\n\n    }\n\n    // Método para cancelar\n    cancelar():void{\n\n      // Limpar formulário\n      this.cliente = new Cliente();\n\n      // Visibilidade dos botões\n      this.btnCadastro = true;\n\n      // Visibilidade da tabela\n      this.tabela = true;\n\n    }\n\n    // Método de inicialização\n    ngOnInit(){\n      this.selecionar();\n    }\n\n}\n","<div class=\"container\">\n    <form>\n        <img src=\"assets/cliente.png\">\n\n        <input type=\"text\" placeholder=\"Nome\" class=\"form-control\" name=\"nome\" [(ngModel)]=\"cliente.nome\" required>\n        <input type=\"number\" placeholder=\"Idade\" class=\"form-control\" name=\"idade\" [(ngModel)]=\"cliente.idade\" required>\n        <input type=\"text\" placeholder=\"Cidade\" class=\"form-control\" name=\"cidade\" [(ngModel)]=\"cliente.cidade\"\n            required>\n\n        <input type=\"button\" value=\"Cadastrar\" *ngIf=\"btnCadastro\" class=\"btn btn-primary\" (click)=\"cadastrar()\">\n        <input type=\"button\" value=\"Alterar\" *ngIf=\"!btnCadastro\" class=\"btn btn-warning\" (click)=\"editar()\">\n        <input type=\"button\" value=\"Remover\" *ngIf=\"!btnCadastro\" class=\"btn btn-danger\" (click)=\"remover()\">\n        <input type=\"button\" value=\"Cancelar\" *ngIf=\"!btnCadastro\" class=\"btn btn-secondary\" (click)=\"cancelar()\">\n    </form>\n\n    <table class=\"table\" *ngIf=\"tabela\">\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>Nome</th>\n                <th>Idade</th>\n                <th>Cidade</th>\n                <th>Selecionar</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let c of clientes; index as i\">\n                <td>{{i+1}}</td>\n                <td>{{c.nome}}</td>\n                <td>{{c.idade}}</td>\n                <td>{{c.cidade}}</td>\n                <td><button class=\"btn btn-success\" (click)=\"selecionarCliente(i)\">Selecionar</button></td>\n            </tr>\n        </tbody>\n    </table>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}